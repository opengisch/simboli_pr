* Simbologia dei piani regolatori del Canton Ticino
** Build
   La generazione completa degli artefatti comprende:
   - la libreria xml dei simboli importabile in QGIS
   - le immagini svg necessarie ai simboli
   - un immagine png con l'anteprima di ogni simbolo
   - un progetto QGIS "demo" che mostra una geometria per ogni simbolo
   - un geopackage con i dati per il progetto QGIS

   La generazione del risultato viene eseguita in automatico da Travis-ci. È
   però possibile anche generare il tutto localmente in modi differenti.
*** Travis-ci
   La generazione del risultato viene eseguita in automatico da Travis-ci ad
   ogni nuovo tag commit nel repository. Travis si occupa del build e di
   caricare il risultato sotto forma di file zip nelle [[https://github.com/opengisch/simboli_pr/releases][releases del repository]].
*** Localmente
    Lo script =build.sh= si occupa del build completo. Requirements sono:
    - bash
    - QGIS3 installato e con ~PYTHONPATH~ correttamente configurato
    - Inkscape
    - sed
    - zip
    Per avviare il build, lanciare:
     #+begin_src sh
     cd scripts/
     ./build.sh
     #+end_src
**** Localmente all'interno di un docker
     È possibile utilizzare localmente il docker con QGIS che viene usato da
     Travis-ci. In questo modo, l'unica dipendenza locale è
     docker-compose. Tutto il resto viene eseguito all'interno del container.

     La procedura per il build usata da Travis-ci (vedi file =.travis.yml=) è
     questa:
     #+begin_src sh
       # Run docker container
       docker-compose -f docker/docker-compose.yml up -d

       # Install dependencies
       docker exec -it qgis bash -c 'cp /shared/ttf/*.ttf /usr/share/fonts/'
       docker exec -it qgis bash -c 'fc-cache -f -v'
       docker exec -it qgis bash -c 'apt-get update && apt install -y inkscape zip'

       # Build
       docker exec -it qgis /bin/bash -c -l -i 'cd /shared/scripts && ./build.sh'

       # Optionally test the result
       docker exec -it qgis /bin/bash -c -l -i 'cd /shared/scripts && python3 test.py'
     #+end_src
